apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.6
targetCompatibility = 1.6
group = 'net.dongliu.patched'
version = '1.7.5'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.apache.commons:commons-compress:1.6'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    testCompile 'junit:junit:4.12'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

task checkSonatypeProperties << {
    if (project.properties['sonatypeUsername'] == null || project.properties['sonatypePassword'] == null) {
        throw new IllegalStateException("ERROR: sonatypeUsername and sonatypePassword properties needed");
    }
}

uploadArchives {
    dependsOn checkSonatypeProperties
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "http://repositories.dai-labor.de/nexus/content/repositories/thirdparty/") {
                authentication(userName: project.properties['sonatypeUsername'], password: project.properties['sonatypePassword'])
            }

            pom.project {
                name 'apk-parser'
                packaging 'jar'
                description 'Pure java apk parser lib'
                url 'https://github.com/xiaxiaocao/apk-parser'

                scm {
                    url 'https://github.com/xiaxiaocao/apk-parser'
                    connection 'scm:git:git@github.com:xiaxiaocao/apk-parser.git'
                    developerConnection 'scm:git:git@github.com:xiaxiaocao/apk-parser.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'xiaxiaocao'
                        name 'Dong Liu'
                    }
                }
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}
